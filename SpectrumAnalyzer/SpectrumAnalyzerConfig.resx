<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Nq7DVQSHKusLHqo0eE4VcWTOTOFxqgzOVMYF6EC/nf8vziHqSMb4iLUz5gC+pADSA0inANIDSKcA0gNI
        pwDSA0inANIDSKcA0gNIpwDSA0inANIDSKcA0gNIpwDSA0inANIDSOc9wL9iIXvM/kdrbwAAAABJRU5E
        rkJggigAAAAwAAAAYAAAAAEACAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPkQ+AD1MPQA7VTwA
        OVs8ACx+LAA3YDcAMXIzADJ1OQA0eD4AP01AAD1aQgA+XkoAO2FDAD1jSQA9ZUsAPmZNADR6QgA2fEUA
        Nn9JAD9nUAA+d1MAPHtTADt8UwBBQUEAQUVBAEVFRQBATkIARUpFAEdMSABJSUkASExJAE1NTQBBUEIA
        QVFFAERTRwBAWkMAQVxFAEJTSABDVEkARFRKAEVWTQBIUEsAQl5IAEdYTwBMU1MAR1hQAEhZUgBIWlUA
        SlxZAE1aXQBKXV0AUVFRAFVVVQBZWVkAXFxcAEFgTQBBYlEAQWNUAEBoUgBAalYAQmVZAENnXwBBbFsA
        SGJnAERoYgBBbWAARWpmAEJuZQBGZ2oARWpoAENwagAbnBsAGKQdABK0EgASuxIAHZ0kAB2fKwAmjSYA
        KYMpACOTIwAolCgAK5srABimJAAYqC0AHaEyABiqMgAeozwAGKs6AADKAwADxwoACMAMAADMCwAA0wAA
        AdwBAADQDgAIxBMAAMwUAAnHGQAAzhwACckdABPDEwAbxxsAANITAAHWGgAB2B4AAeIBAAvlCwADzSQA
        CswjAAPPKwAA0SQAAdsjAADSLAAK0SsAAd4pAATcKAAE3iwAANM0AArVMgAK2DcAAdU8AAHhLQAE4DAA
        AeQyAAHmNwAE5TkAAek9ADaBTAA3hFEAH6ZFABquQwAfp0kAGq9IAB+oTgAasU4AGrJTABu0WAAbtV0A
        IKpTACCrWAAgrF0AG7ZjABu4aAAbuW8AG7x8ACCtYgAhr2cAIbBtACGzeQAB10MAAtZFAADYRAAK3UAA
        A9dMAADZSwAB2EwAAdpSAADcUQAC2lQAA9lZAADcWQAD218AAN5eABrQXQAgxV0ACuNLAAHwSAAC804A
        C+lVAAXyUAAC91QAAd5hAAPdZgAC32oAA95sAADhZgAB4GkAAOJsAAHhcQAD4XcAAOR4AAHkfgA9W5UA
        RluDAEhbgAAfY88AH27PAB55zwAmY8YAJW3FACV3xQACY/8AAnT/ADeSiAA2lIoAIbaGACK5kgAivZ8A
        I7G+ACO3vAAjvboAHMCKABzDmAAD5o4AAOmNAAHokgAcxqYAHcq0ACPArAAjwrcAAe2gAAHtpQAA8KcA
        AvG0AALyugAD8r0AAPa/AB6EzwAej88AHpvOACWBxQAli8UAJJXEACSfxAAepc4AHq3MAB2zygAducgA
        JKbCACSrwAAChP8AApT/AAKk/wACtf8AHcDGAB3HxAAdzMAAAvbHAAL2zAAD+NQAAPzXAAL72wAUwOIA
        AsT/AALP/QAC2foAA/vgAAL84QAD9u8AAv3sAALi9gAC5PUAAuz0AAL28AA8PDwA////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /////wFISEhISAICSEhISEgBBUhISEhPAVBISEhIBgNISEhISAEHSEhISE7/////GBgYGAJaWVlZWQMD
        XFxcXFoCTFlZWVlJAVtZWVlZBwRZWVlZWgJOWVlZWUoYGBgYGBgYGApcXFxcXAMDYVxcXGEKTFxcXFxT
        GWBcXFxcBwRcXFxcYQpOWVlZWUoYGBgYGBgYGApfX19fXwMDYWFhYWEKTWFhYWFTGWBfX19fBwRhYWFh
        YQpOXV1dXUoYGBgYGBgYGBtnZ2dnZwsEY2NjY2MhVWNjY2NUGWJnZ2dnCARjY2NjYwpRXV1dXUsYGBgY
        GBgYGCFoZ2dnZwsLb29vb28hVW9vb29WGWRnZ2dnCA1vb29vbBtRXV1dXUsYGBgYGBgYGCFoaGhoaCQL
        cXFxcXEiV3FxcXFYGW1oaGhoCA1xcXFxbhtRXl5eXksYGBgYGBgYGCFpaWlpaSQLdnZ2dnYiV3Z2dnZY
        GW1paWlpCQ1xcXFxdiJRXl5eXmUYGBgYGhoaGiJ0cHBwcCUMeXl5eXkmgnl5eXmDHHJwcHBwCQ12dnZ2
        diJSXl5eXmUaGhoaGhoaGiJ0cHBwcCUMl5iYmJcmhJaWlpaFHHJzc3NzEQ55eXl5eSJSampqamUaGhoa
        GhoaGiN1c3NzcyUMnJycnJwnhpubm5uHHHd6enp6EQ6YmJiYlyZSa2tra2YaGhoaGhoaGiN7enp6eisM
        n52dnZ8oi52dnZ2IHXh8fHx8Eg+bm5ubmiccHBwcHBwaGhoaGhoaGih+fX19fSs4o6GhoaEpjKGhoaGJ
        HZl/f39/ExCenp6enSgaGhoaGhoaGhoaGhoaGiiqqKioqDg4rKysrKwpjaysrKyKHaanp6engBChoaGh
        oCgaGhoaGhoaGhoaHh4eHh8WFxcXFyo5rrGxsa4pkrGxsbGOH6mrq6urgRSjo6OjoikeHh4eHh4eHh4e
        Hh4eHh4eHh4eHh45s7Ozs7Msk7Ozs7OPH6WkpKSkFTuwsLCwrSkeHh4eHh4eHh4eHh4eHh4eHh4eHh46
        tra2trYulLW1tbWQHh4eHh4eHjuysrKyrykeHh4eHh4eHh4eHh4eHh4eHh4eHh49zs7Ozs4vlc3Nzc2R
        Hh4eHh4eHjy1tbW1tC4eHh4eHh4eHh4eHh4eHh4eHh4eHh491NTU1NQwxNPT09PKHh4eHh4eHj/Nzc3N
        zC8eHh4eHh4eHh4eHh4eHh4eHh4eHh4+19fX19cwxdbW1tbLHh4eHh4eHkLV1dXV1DAeHh4eHh4eHh4e
        ICAgICAgICAgICBB7+/v7+8xxu7u7u7PICAgICAgIETZ2dnZ2DAgICAgICAgICAgICAgICAgICAgICBD
        +Pj4+Pcz0fLy8vLQICAgICAgIEfx8fHx8DEgICAgICAgICAgICAgICAgICAgICBG+f7+/vkz0vr6+vrt
        ICAgICAgIDHDw8PDwi0gICAgICAgICAgICAgICAgICAgICBF/Pz8/Pwzyf7+/v7sICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICBA8/Pz8/MyyP39/f3rICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgx/v7+/vkICAgICAgICAgICAgICAgICAgICAgICAgNDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ05vb29vbjNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ05fX19fXi
        NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ04PT09PThNDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ03+rq6urcNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDQ0NDQ0NDQ0NDQ03unp6enbNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NTU1NTU1NTU1NTU1
        NTU1NTU13ejo6OjaNTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1v+fn5+e8
        NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1vsHBwcG7NTU1NTU1NTU1NTU1
        NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1vcDAwMC6NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1
        NTU1NTU1NTU1NTU1NTU1NTU1ube3t7e4NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1
        NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2
        NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2
        NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2
        NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2
        NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAIAAAAAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAA9QT0APkc/ADtKOwA8SDwANVo2ADRdNAA5UToAOFU4ADtUPQA8Vj8A
        Olg6ADxbPAA9XT0ALHctADFrMQAxbTEALHkxAC59NwAufzoAM3EzADRyNAA0dDQAOXE5AD9IQAA9V0AA
        PlhCAD9aRABBQUEARUVFAEBKQgBGSEcAQkxEAERORwBHSUgARk5JAElJSQBJTEoASk5MAE1NTQBAXUEA
        QFtGAEZRSgBGVEsASFBLAEpQTwBBXUkAQ19OAEtRUQBNUVEATlVWAExYWgBQUFAAUlJSAFFUVQBUVFQA
        VlZWAFRWWABVV1oAWFhYAFpaWgBcXFwAVFhgAFFYZQBRWGYACbwPABeiHAAJvRgAHpQiAB6WKgAemTAA
        H5o3AB+cPgAhkiQAIpQoACKWLAAvgT0AIJcxACOZMAAkmzMAJJ43ACCZOAAhmz8AGKMjABilKwAJvyEA
        GKgyABmqOQAloDsAAMsAAADPAAAAyQUAB8IKAAbCDAAAyggAAM4KAAHNDAAA0wAAAdgBAAHcAQAHxRAA
        BsQXAADMEgAHyBYABsQYAADOGwAAzx4AB8wcAADREQAA1RcAAdUZAAHYHgAR0xEAAeABAAbGIgAIzyIA
        CsIrAAbJLAAA0SUACNInAALYIAAB3CMAAdwmAADRKQAA0y8ACNUuAAHfKgAKxDMABss2AArHPQAGzDgA
        ANQ0AAjZNAAA1joAAdc/AAHgLQAB4zEAAeY3AALlOAAvgkAAMIVEADGJSwAhnUUAIp9NADSKUgAZq0AA
        Ga1IABmvTwAasVYAGrRdACWjQAAgoEwAIaJTACKhVAAoqlEAI6NbACGkWgA8g3sAGrVlABu5dQAipWEA
        JKdsACKoagAirXsAJKx9AAfOQQAKyUYACstPAAHXQQAA2EQAB9BMAAHZSwAA2k0ACs1YAAfTVgAB3FYA
        AN1YAALuSQAF708AAfBIAAzkUAAJ7loACPBaAAfVYQAK0GEAAd5hAArSagAH2GsAB9htAArXfgAH2ngA
        CNx8AADgYgAA4WwAAeR6AAHlfgApYrsAJ2+9ACd9vAALZPIABGT8AAl69AACfP8ANpKHADGajgAbv44A
        I7GNACWwjwAktZ4AJou8ACaZvAAltaAAJrOvACS4rgAoorMAJaq2ACWiuQAlsrMAC96eAADogwAH4JIA
        AeqWAAjimAAB7JwAG8anAAjnrgAA8KcACemzAAvmvgAC8bQAAvO5AAmR9AAClP8ACaf0AAKs/wAJvfQA
        CO3JAAnvzwAA+csAAvjRAAL61wAN0OsACdnsAAnM8AACxP8ABtj1AALU+wAJ7OUACOboAAjx4QAC9+8A
        AvzrAALi9wAC8fIAPDw8ADw8PAD+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+AQEBBwYGBQEFBgYHBwYGBQEGBgYDCAYGBQEGBgYEAQEBAQFJ
        W1tcAl1eXkREXl5dB1tbWw5CXl5BC1lZWQ8BARwcHEpfX2QYaGZmRUVmZmUJYF9fEVNmZkMLWlpaEBwc
        HBwcS2xsZx5yampNRmpqcgpsbGwRVGlpVQthYWEQHBwcHBxObW1rHnV7e1FHe3t1GW5ubhJWdnZ0DGJi
        YhQcHBwcHE9vb3MggoODUkiDg4AaeG9vE1d8fH8NY2NjFRwcHR0dUHl5dyClqKiOjoaGpRt6enpMkYWF
        gQ1xcXEWHR0dHR1Yfn59Iaqrq4+Xq6uqKYeHh4uSqammKHBwcBcdHR0dHZaIiIQhrq+vmZivr64uiomJ
        jJOsrKcfHR0dHR0dHx8fmrKytCq3ubmbnLm5ty6xs7ONlLCwrSIfHx8fHx8iIiIjKysrI7zBwaCgwcG7
        L7W2tpCVwMC4JCIiIiIiIiQkJCQkJCQsv8PDoaLCwr4mLCwsJZ7BwbolJCQkJCQkJCQkJCQkJCbe39+k
        o93d3CYkJCQkn9vbvSUkJCQkJCQlJSUlJSUlLePm5s/O5eXhLSUlJSXN4uLaJiUlJSUlJScnJycnJycw
        7fDw09Dv7+wwJycnJ+Du7uQnJycnJycnJycnJycnJzD3+vrU1fv7+TEnJycnnczMyycnJycnJycnJycn
        JycnMfH19dbZ/f34MScnJycnJycnJycnJycnJzQ0NDQ0NDQ0MzMzMtf8/PI2NDQ0NDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDQ0NDQ02Pb28zY0NDQ0NDQ0NDQ0NDQ0NDQ1NTU1NTU1NTU1NTXS9PTrNjU1NTU1NTU1NTU1
        NTU1NTU1NTU1NTU1NTU1NdHq6uk5NTU1NTU1NTU1NTU1NTU1Nzc3Nzc3Nzc3Nzc3xujo5zk3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzfFysrJOTc3Nzc3Nzc3Nzc3Nzc3Nzg4ODg4ODg4ODg4OMTIyMc6ODg4
        ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4PkBAPzg4ODg4ODg4ODg4ODg4ODg7Ozs7Ozs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7PDw8PDw8PDw8PDw8
        PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PD09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAEAAAACAAAAABAAgAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAD0+PQA/Pz8AP0E/AD1GPQApeSwAP0lAAD9mTwA9bU4AP2pfADtwVQBBQUEA
        QUNBAENDQwBDRkMARUVFAERHRABHR0cAQUtCAENORQBFT0gASUlJAEtLSwBNTU0AT09PAEtUUwBGWVMA
        UlJSAFRUVABWVlYAWFhYAFpaWgBbW1sASlpwAEFuagBDa28ARGhuAEVncgBHYHQAQW52ABibHQANsw0A
        CrkPAAi8DQARrREAF6AaABagHAAerx4ACboQAAi7EAAKuBIAEbEeAB2ZLwAenT0AIIwlACWBKAAjjS0A
        J4MxACmHOgAkkjUAJZY9ABOqJwARrygAE7YoABSuNgATvDIAEbQ6ACGpIQAGyAYACsEKAAzIDAAH0AcA
        A80TAALNHAAAzx4AANISAATUHwAB2R8AA8sgAATbLAAC0TAAA9A2AADUNAAB4S0AKotDACuRTwAmnkwA
        H6FLABSyRgAfskoAErhMABW2VQATvV0AIKVZADaKfgAVumUAIKlrABPNSgAC1kQABNVMAAHZSwAC21gA
        AfBIAATbYgAB3mEAE8N1AALgbgAE4X8AAeV8ADJgpQApebMAEmbjAC2ejwAiso0AKJGyACajrwAjt60A
        FsWQABTNoQAC7qYABe63AALxtAAClP8AFc7JAALD/gAF7ukAAvroAALi9wA9PT0ACsc9AAbMOAAA1DQA
        CNk0AADWOgAB1z8AAeAtAAHjMQAB5jcAAuU4AC+CQAAwhUQAMYlLACGdRQAin00ANIpSABmrQAAZrUgA
        Ga9PABqxVgAatF0AJaNAACCgTAAholMAIqFUACiqUQAjo1sAIaRaADyDewAatWUAG7l1ACKlYQAkp2wA
        IqhqACKtewAkrH0AB85BAArJRgAKy08AAddBAADYRAAH0EwAAdlLAADaTQAKzVgAB9NWAAHcVgAA3VgA
        Au5JAAXvTwAB8EgADORQAAnuWgAI8FoAB9VhAArQYQAB3mEACtJqAAfYawAH2G0ACtd+AAfaeAAI3HwA
        AOBiAADhbAAB5HoAAeV+ACliuwAnb70AJ328AAtk8gAEZPwACXr0AAJ8/wA2kocAMZqOABu/jgAjsY0A
        JbCPACS1ngAmi7wAJpm8ACW1oAAms68AJLiuACiiswAlqrYAJaK5ACWyswAL3p4AAOiDAAfgkgAB6pYA
        COKYAAHsnAAbxqcACOeuAADwpwAJ6bMAC+a+AALxtAAC87kACZH0AAKU/wAJp/QAAqz/AAm99AAI7ckA
        Ce/PAAD5ywAC+NEAAvrXAA3Q6wAJ2ewACczwAALE/wAG2PUAAtT7AAns5QAI5ugACPHhAAL37wAC/OsA
        AuL3AALx8gA8PDwAPDw8AICAAQEBAQEBgAGAAQEBAYACBCotLjI2MQUrNzAoLCkDCwZIMz5ONEo5SzhJ
        PUVEDA0STD9CUTVSOk07UEBGRw4PE09BWmNXZFRTPGJYQy8QERRhWVxnXWhVZlZlWxERERUVFRVpa2Bs
        CggHal8VFRUWFhYWdnhxeQkWGnd1FhYWFxcXF3t9dH4iFxlwXhcXFxgYGBgkJ3N/IxgYGBgYGBgbGxsb
        GxtyfCUbGxsbGxsbHBwcHBwcbnomHBwcHBwcHB0dHR0dHW1vIR0dHR0dHR0eHh4eHh4eHh4eHh4eHh4e
        Hx8fHx8fHx8fHx8fHx8fHyAgICAgICAgICAgICAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>